name: Build and push Docker image

on:
  push:
    # branches:
    #   - master
    paths:
      - 'Dockerfile'
      - '*.py'
      - 'pyproject.toml'
      - 'requirements.txt'
      - '.github/workflows/docker-build.yml'
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: vlm-chart-pattern-analyzer-runner
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Start Docker service
        shell: powershell
        run: |
          Start-Process "C:\Program Files\Docker\Docker\Docker Desktop.exe"
          Start-Sleep -Seconds 20
          docker version

      - name: Verify Docker
        shell: cmd
        run: docker version

      - name: Log in to container registry
        shell: cmd
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login docker.io -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Verify login
        shell: cmd
        run: docker info

      - name: Extract image tags
        shell: powershell
        id: tags
        run: |
          $datetime = Get-Date -Format "yyyyMMdd-HHmmss"
          $repo = "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          $branch = "${{ github.ref_name }}" -replace '/','-'

          $tag = "${repo}:${branch}-${datetime}"

          echo "tags=${tag}" >> $env:GITHUB_OUTPUT
          echo "first_tag=${tag}" >> $env:GITHUB_OUTPUT

          Write-Host "Generated tag: ${tag}"

      - name: Verify build context
        shell: cmd
        run: |
          echo Current directory:
          cd
          echo.
          echo Directory contents:
          dir /B
          echo.
          if exist "src" (
            echo src directory exists
            dir src
          ) else (
            echo ERROR: src directory not found!
            exit /b 1
          )

      - name: Build Docker image
        shell: cmd
        run: |
          echo Building image: ${{ steps.tags.outputs.first_tag }}
          "C:\Program Files\Docker\Docker\resources\bin\docker.exe" build -t ${{ steps.tags.outputs.first_tag }} --progress=plain .
          if errorlevel 1 exit /b 1

      - name: Push Docker image
        shell: cmd
        run: |
          echo Pushing ${{ steps.tags.outputs.first_tag }}...
          "C:\Program Files\Docker\Docker\resources\bin\docker.exe" push ${{ steps.tags.outputs.first_tag }}

      - name: Post build summary
        shell: cmd
        run: |
          echo Build complete: ${{ steps.tags.outputs.first_tag }}>>%GITHUB_STEP_SUMMARY%

